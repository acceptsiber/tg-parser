from copy import deepcopy
import json
import re


def remove_emojis(text):
    # –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–º–∞–π–ª–∏–∫–æ–≤ –∏ –¥—Ä—É–≥–∏—Ö emoji
    emoji_pattern = re.compile(
        "["
        "\U0001f600-\U0001f64f"  # emoticons
        "\U0001f300-\U0001f5ff"  # symbols & pictographs
        "\U0001f680-\U0001f6ff"  # transport & map symbols
        "\U0001f1e0-\U0001f1ff"  # flags (iOS)
        "\U00002702-\U000027b0"
        "\U000024c2-\U0001f251"
        "]+",
        flags=re.UNICODE,
    )
    return emoji_pattern.sub(r"", text)


def parse_message_to_json(message, template_json):
    price_match = re.search(r"–¶–µ–Ω–∞:\s*([\d\s]+)\$", message)
    area_match = re.search(r"–æ–±—â–∞—è –ø–ª–æ—â–∞–¥—å:\s*([\d]+)\s*–∫–≤\.–º", message)
    address_match = re.search(r"–ê–¥—Ä–µ—Å:\s*(.*?)\s*üî∂", message)
    description = message.split("‚òéÔ∏è")[0].strip() if "‚òéÔ∏è" in message else message
    rooms_match = re.search(r"–∫–æ–º–Ω–∞—Ç:\s*(\d+)", message)
    floors_match = re.search(r"—ç—Ç–∞–∂:\s*(\d+)", message)
    land_area_match = re.search(r"—Å–æ—Ç–æ–∫:\s*([\d,]+)", message)
    condition_match = re.search(r"–°–æ—Å—Ç–æ—è–Ω–∏–µ:\s*(.*?)(?=üí∞|üî∂|‚òéÔ∏è|$)", message)

    deal_type = "1"  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ–¥–∞–∂–∞
    if any(word in message.lower() for word in ["–∞—Ä–µ–Ω–¥–∞", "—Å–¥–∞–µ—Ç—Å—è", "–∞—Ä–µ–Ω–¥—É"]):
        deal_type = "2"

    for field in template_json["object_fields"]:
        if field["title"] == "–¶–µ–Ω–∞" and price_match:
            price = price_match.group(1).replace(" ", "")
            field["data"]["value"] = str(price)

        elif field["title"] == "–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å" and area_match:
            field["data"]["value"] = area_match.group(1)

        elif field["title"] == "–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞" and address_match:
            field["data"][
                "value"
            ] = f"–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω, –¢–∞—à–∫–µ–Ω—Ç, {address_match.group(1).strip()}"

        elif field["title"] == "–û–ø–∏—Å–∞–Ω–∏–µ":
            field["data"]["value"] = remove_emojis(description)

        elif field["title"] == "–¢–∏–ø —Å–¥–µ–ª–∫–∏":
            field["data"]["value"] = deal_type
            
    result_json = deepcopy(template_json)
    return result_json


# –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
# message = "–°779 üè°–ü—Ä–æ–¥–∞–µ—Ç—Å—è –¥–æ–º –≤ –ú–∏—Ä–∑–æ-–£–ª—É–≥–±–µ–∫—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ! üåç–ê–¥—Ä–µ—Å: –æ—Ä-—Ä –£–ª. –ö–∞–π–Ω–∞—Ä—Å–∞–π üî∂—Å–æ—Ç–æ–∫: 2,8 üî∂—ç—Ç–∞–∂: 2 üî∂–∫–æ–º–Ω–∞—Ç: 5 üî∂–æ–±—â–∞—è –ø–ª–æ—â–∞–¥—å: 300 –∫–≤.–º üî∂–°–æ—Å—Ç–æ—è–Ω–∏–µ: –ê–≤—Ç–æ—Ä—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç üí∞–¶–µ–Ω–∞: 370 000$ ‚òéÔ∏è (99)729-49-91"

# # –ó–∞–≥—Ä—É–∂–∞–µ–º JSON —à–∞–±–ª–æ–Ω
# template_json = {
#     "type": "1",
#     "user": "608",
#     "object_type": "5",
#     "object_fields": [
#         {
#             "id": "896",
#             "title": "–¶–µ–Ω–∞",
#             "field_type": "number",
#             "data": {"value": "5000000"},
#             "options": [],
#             "required": True,
#         },
#         {
#             "id": "951",
#             "title": "–û–±—â–∞—è –ø–ª–æ—â–∞–¥—å",
#             "field_type": "number",
#             "data": {"value": "–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω, –¢–∞—à–∫–µ–Ω—Ç, –¶–∏–æ–ª–∫–æ–≤—Å–∫–∏–π"},
#             "options": [],
#             "required": False,
#         },
#         {
#             "id": "869",
#             "title": "–ê–¥—Ä–µ—Å –æ–±—ä–µ–∫—Ç–∞",
#             "field_type": "address",
#             "data": {"value": "–£–∑–±–µ–∫–∏—Å—Ç–∞–Ω, –¢–∞—à–∫–µ–Ω—Ç, –¶–∏–æ–ª–∫–æ–≤—Å–∫–∏–π"},
#             "options": [],
#             "required": False,
#         },
#         {
#             "id": "871",
#             "title": "–û–ø–∏—Å–∞–Ω–∏–µ",
#             "field_type": "rich_text",
#             "data": {
#                 "value": "üè°–ü—Ä–æ–¥–∞–µ—Ç—Å—è –¥–æ–º –≤ –ú–∏—Ä–∑–æ-–£–ª—É–≥–±–µ–∫—Å–∫–æ–º —Ä–∞–π–æ–Ω–µ! üåç–ê–¥—Ä–µ—Å: –£–ª. –¶–∏–∞–ª–∫–æ–≤—Å–∫–∞—è üîµ—Å–æ—Ç–æ–∫: 3,6 üî¥–∫–æ–º–Ω–∞—Ç: 11 üü†—ç—Ç–∞–∂: 2 üü¢–æ–±—â–∞—è –ø–ª–æ—â–∞–¥—å: 360 –∫–≤.–º üí∞–¶–µ–Ω–∞: 250 000$ ‚òéÔ∏è (99)729-49-91"
#             },
#             "options": [],
#             "required": False,
#         },
#         {
#             "id": "883",
#             "title": "–¢–∏–ø —Å–¥–µ–ª–∫–∏",
#             "field_type": "object_type",
#             "data": {"value": "1"},
#             "options": [],
#             "required": True,
#         },
#     ],
# }

# # –ü–∞—Ä—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ–±–Ω–æ–≤–ª—è–µ–º JSON
# updated_json = parse_message_to_json(message, template_json)

# # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
# print(json.dumps(updated_json, ensure_ascii=False, indent=2))
